plugins {
	id 'net.kyori.indra' apply false
	id 'net.kyori.indra.license-header' apply false
	id 'net.kyori.indra.publishing.gradle-plugin' apply false
	id 'io.freefair.lombok' apply false
}

group = "net.galacticraft"
version = "1.0.2-SNAPSHOT"

tasks.named('wrapper') {
	distributionType = Wrapper.DistributionType.ALL
}

subprojects {
	apply plugin: 'io.freefair.lombok'
	apply plugin: 'java-library'
	apply plugin: 'eclipse'

	repositories {
		maven {
			name 'galacticraft'
			url 'https://repo.galacticraft.net/repository/maven-public/'
		}
	}

	sourceSets {
		test {
			java {
				srcDirs = ['src/test/java']
			}
			resources {
				srcDirs = ['src/test/resources']
			}
		}
	}

	plugins.withId("java") {

		java {
			withSourcesJar()
			withJavadocJar()
			toolchain {
				languageVersion = JavaLanguageVersion.of(8)
			}
		}

		plugins.apply "jacoco"

		jacoco {
			reportsDirectory = layout.buildDirectory.dir("${buildDir}/JacocoReports")
		}

		jacocoTestReport.reports.xml.required = true

		test {
			useJUnitPlatform()
			finalizedBy jacocoTestReport
		}

		dependencies {
			testImplementation 'org.assertj:assertj-core:3.22.0'
			testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
			testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
			testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
		}

		dependencies {
			implementation 'com.google.guava:guava:30.1.1-jre'
		}
		
		build.dependsOn 'test'
	}
	
	eclipse {
		classpath {
			file {
				whenMerged { classpath ->
					String gradleHome = gradle.getGradleHomeDir()
							.absolutePath
							.replace(File.separator, '/')
					String gradleSourceDirectory = "${gradleHome}/src"
					classpath.entries.each { entry ->
						if (entry in org.gradle.plugins.ide.eclipse.model.AbstractLibrary
								&& entry.library.path.contains('generated-gradle-jars')) {
							entry.sourcePath =
									new org.gradle.plugins.ide.eclipse.model.internal.FileReferenceFactory()
									.fromPath(gradleSourceDirectory)
						}
					}
				}
			}
		}
	}
}
